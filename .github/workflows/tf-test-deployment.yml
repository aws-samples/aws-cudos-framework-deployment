name: Terraform Test Deployment

on:
  pull_request:
    branches:
      - "*"

permissions:
  id-token: write
  contents: read

jobs:
  test-deployment:
    runs-on: ubuntu-latest
    
    env:
      DATABASE_NAME: cid_data_export
    
    steps:
      - uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y bats jq
          pip3 install --upgrade cid-cmd
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v3
      
      - name: Get CID versions
        id: versions
        run: |
          # Get CID CFN version
          CFN_VERSION=$(curl -s https://raw.githubusercontent.com/aws-solutions-library-samples/cloud-intelligence-dashboards-framework/main/cfn-templates/cid-cfn.yml | grep Description | grep -o '[0-9]\+\.[0-9]\+\.[0-9]\+' | head -1)
          echo "cid_cfn_version=$CFN_VERSION" >> $GITHUB_OUTPUT
          
          # Get Data Export version
          EXPORT_VERSION=$(curl -s https://raw.githubusercontent.com/aws-solutions-library-samples/cloud-intelligence-dashboards-data-collection/main/data-exports/deploy/data-exports-aggregation.yaml | grep Description | grep -o '[0-9]\+\.[0-9]\+\.[0-9]\+' | head -1)
          echo "data_export_version=$EXPORT_VERSION" >> $GITHUB_OUTPUT

      - name: Create terraform.tfvars
        run: |
          cat > ./terraform/terraform.tfvars << EOF
          global_values = {
            destination_account_id = "${{ secrets.AWS_ACCOUNT_ID }}"
            source_account_ids     = "${{ secrets.AWS_ACCOUNT_ID }}"
            aws_region             = "${{ secrets.AWS_REGION }}"
            quicksight_user        = "${{ secrets.QUICKSIGHT_USER }}"
            cid_cfn_version        = "${{ steps.versions.outputs.cid_cfn_version }}"
            data_export_version    = "${{ steps.versions.outputs.data_export_version }}"
            environment            = "dev"
          }
          EOF

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE }}
          aws-region: ${{ secrets.AWS_REGION }}
          role-duration-seconds: 3600
          role-skip-session-tagging: true

      - name: Initialize Terraform
        working-directory: ./terraform
        run: terraform init

      - name: Run TFLint
        working-directory: ./terraform
        run: tflint --format=compact

      - name: Terraform Format Check
        working-directory: ./terraform
        run: terraform fmt -check -recursive

      - name: Terraform Validate
        working-directory: ./terraform
        run: terraform validate

      - name: Prepare deploy and cleanup scripts
        run: |
          # Debug directory structure
          echo "Current directory: $(pwd)"
          ls -la
          
          # Create a new backend.tf file with S3 configuration
          cat > ./terraform/backend.tf << EOF
          terraform {
            backend "s3" {
              bucket = "${{ secrets.BACKEND_S3_BUCKET }}"
              key    = "terraform/cid-test/terraform.tfstate"
              region = "${{ secrets.AWS_REGION }}"
            }
          }
          EOF
          
          # Create provider override
          cat > ./terraform/local_override.tf << EOF
          provider "aws" {
            alias = "destination_account"
            # This will use the same credentials as the default provider
          }
          EOF
          
          # Ensure dashboards.bats exists
          if [ ! -f "./terraform-test/dashboards.bats" ]; then
            echo "Copying dashboards.bats from cid/tests to terraform-test"
            cp ./cid/tests/dashboards.bats ./terraform-test/
          fi
          
          # Make deploy.sh executable
          chmod +x ./terraform-test/deploy.sh
          chmod +x ./terraform-test/cleanup.sh

      - name: Run deploy script
        run: |
          export DATABASE_NAME="cid_data_export"
          export RESOURCE_PREFIX="cid-tf"
          export BACKEND_TYPE="s3"
          export S3_BUCKET="${{ secrets.BACKEND_S3_BUCKET }}"
          export S3_KEY="terraform/cid-test/terraform.tfstate"
          export S3_REGION="${{ secrets.AWS_REGION }}"
          ./terraform-test/deploy.sh
        
      - name: Run cleanup script
        if: always()
        run: |
          export RESOURCE_PREFIX="cid-tf"
          export BACKEND_TYPE="s3"
          export S3_BUCKET="${{ secrets.BACKEND_S3_BUCKET }}"
          export S3_KEY="terraform/cid-test/terraform.tfstate"
          export S3_REGION="${{ secrets.AWS_REGION }}"
          ./terraform-test/cleanup.sh
          