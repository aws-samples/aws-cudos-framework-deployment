permissions:
  id-token: write
  contents: read

name: Run Tests

on:
  pull_request:
    branches:
      - '*'

concurrency: staging_environment

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 1
      matrix:
        os: [ubuntu-latest, macos-latest]
        python-version: ["3.7", "3.8", "3.9", "3.10"]
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install
        run: |
          python -m pip install --upgrade pip
          pip install ./
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE }}
          role-session-name: ${{ secrets.AWS_SESSION_NAME }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name:  Install Bats
        run: |
          sudo apt-get install -y bats
          bats -v
#      - name:  Run basic Tests
#        run: |
#          cid-cmd -vv status  \
#            --dashboard-id cudos \
#            --athena-database athenacurcfn_cur1\
#            --account-map-source dummy \
#            --quicksight-user cicd-staging | grep -v accountId   | grep -v userId
      - name:  Run Bats Tests
        run: |
          bats cid/test/bats/10-deploy-update-delete/cudos.bats | grep -v accountId   | grep -v userId

  push:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      max-parallel: 1
    steps:
      - name: Git clone the repository
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Install
        run: |
          python -m pip install --upgrade pip
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE }}
          role-session-name: ${{ secrets.AWS_SESSION_NAME }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Push LambdaLayer to S3
        run: |
          ./assets/publish_lambda_layer.sh

  test:
    needs: push
    runs-on: 'ubuntu-latest'
    steps:
      - name:  Run Bats Tests for CloudFormation
        run: |
          #bats <replace with CFN bats>
